<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fans.mapper.ShakedetailsMapper">
  <resultMap id="BaseResultMap" type="com.fans.pojo.Shakedetails">
    <id column="Id" jdbcType="BIGINT" property="id" />
    <result column="openId" jdbcType="VARCHAR" property="openid" />
    <result column="playDate" jdbcType="VARCHAR" property="playdate" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="isWin" jdbcType="BIT" property="iswin" />
    <result column="prize" jdbcType="VARCHAR" property="prize" />
    <result column="points" jdbcType="INTEGER" property="points" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, openId, playDate, time, count, isWin, prize, points
  </sql>
  <select id="selectByExample" parameterType="com.fans.pojo.ShakedetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shakedetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shakedetails
    where Id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from shakedetails
    where Id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fans.pojo.ShakedetailsExample">
    delete from shakedetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fans.pojo.Shakedetails">
    insert into shakedetails (Id, openId, playDate, 
      time, count, isWin, prize, 
      points)
    values (#{id,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR}, #{playdate,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{count,jdbcType=INTEGER}, #{iswin,jdbcType=BIT}, #{prize,jdbcType=VARCHAR}, 
      #{points,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fans.pojo.Shakedetails">
    insert into shakedetails
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="openid != null">
        openId,
      </if>
      <if test="playdate != null">
        playDate,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="iswin != null">
        isWin,
      </if>
      <if test="prize != null">
        prize,
      </if>
      <if test="points != null">
        points,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="playdate != null">
        #{playdate,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="iswin != null">
        #{iswin,jdbcType=BIT},
      </if>
      <if test="prize != null">
        #{prize,jdbcType=VARCHAR},
      </if>
      <if test="points != null">
        #{points,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fans.pojo.ShakedetailsExample" resultType="java.lang.Long">
    select count(*) from shakedetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shakedetails
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.openid != null">
        openId = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.playdate != null">
        playDate = #{record.playdate,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.iswin != null">
        isWin = #{record.iswin,jdbcType=BIT},
      </if>
      <if test="record.prize != null">
        prize = #{record.prize,jdbcType=VARCHAR},
      </if>
      <if test="record.points != null">
        points = #{record.points,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shakedetails
    set Id = #{record.id,jdbcType=BIGINT},
      openId = #{record.openid,jdbcType=VARCHAR},
      playDate = #{record.playdate,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      count = #{record.count,jdbcType=INTEGER},
      isWin = #{record.iswin,jdbcType=BIT},
      prize = #{record.prize,jdbcType=VARCHAR},
      points = #{record.points,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fans.pojo.Shakedetails">
    update shakedetails
    <set>
      <if test="openid != null">
        openId = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="playdate != null">
        playDate = #{playdate,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="iswin != null">
        isWin = #{iswin,jdbcType=BIT},
      </if>
      <if test="prize != null">
        prize = #{prize,jdbcType=VARCHAR},
      </if>
      <if test="points != null">
        points = #{points,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fans.pojo.Shakedetails">
    update shakedetails
    set openId = #{openid,jdbcType=VARCHAR},
      playDate = #{playdate,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      count = #{count,jdbcType=INTEGER},
      isWin = #{iswin,jdbcType=BIT},
      prize = #{prize,jdbcType=VARCHAR},
      points = #{points,jdbcType=INTEGER}
    where Id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.fans.pojo.Shakedetails">
    <id column="Id" jdbcType="BIGINT" property="id" />
    <result column="openId" jdbcType="VARCHAR" property="openid" />
    <result column="playDate" jdbcType="VARCHAR" property="playdate" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="isWin" jdbcType="BIT" property="iswin" />
    <result column="prize" jdbcType="VARCHAR" property="prize" />
    <result column="points" jdbcType="INTEGER" property="points" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, openId, playDate, time, count, isWin, prize, points
  </sql>
  <select id="selectByExample" parameterType="com.fans.pojo.ShakedetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shakedetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shakedetails
    where Id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from shakedetails
    where Id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fans.pojo.ShakedetailsExample">
    delete from shakedetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fans.pojo.Shakedetails">
    insert into shakedetails (Id, openId, playDate, 
      time, count, isWin, prize, 
      points)
    values (#{id,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR}, #{playdate,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{count,jdbcType=INTEGER}, #{iswin,jdbcType=BIT}, #{prize,jdbcType=VARCHAR}, 
      #{points,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fans.pojo.Shakedetails">
    insert into shakedetails
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="openid != null">
        openId,
      </if>
      <if test="playdate != null">
        playDate,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="iswin != null">
        isWin,
      </if>
      <if test="prize != null">
        prize,
      </if>
      <if test="points != null">
        points,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="playdate != null">
        #{playdate,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="iswin != null">
        #{iswin,jdbcType=BIT},
      </if>
      <if test="prize != null">
        #{prize,jdbcType=VARCHAR},
      </if>
      <if test="points != null">
        #{points,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fans.pojo.ShakedetailsExample" resultType="java.lang.Long">
    select count(*) from shakedetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shakedetails
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.openid != null">
        openId = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.playdate != null">
        playDate = #{record.playdate,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.iswin != null">
        isWin = #{record.iswin,jdbcType=BIT},
      </if>
      <if test="record.prize != null">
        prize = #{record.prize,jdbcType=VARCHAR},
      </if>
      <if test="record.points != null">
        points = #{record.points,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shakedetails
    set Id = #{record.id,jdbcType=BIGINT},
      openId = #{record.openid,jdbcType=VARCHAR},
      playDate = #{record.playdate,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      count = #{record.count,jdbcType=INTEGER},
      isWin = #{record.iswin,jdbcType=BIT},
      prize = #{record.prize,jdbcType=VARCHAR},
      points = #{record.points,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fans.pojo.Shakedetails">
    update shakedetails
    <set>
      <if test="openid != null">
        openId = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="playdate != null">
        playDate = #{playdate,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="iswin != null">
        isWin = #{iswin,jdbcType=BIT},
      </if>
      <if test="prize != null">
        prize = #{prize,jdbcType=VARCHAR},
      </if>
      <if test="points != null">
        points = #{points,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fans.pojo.Shakedetails">
    update shakedetails
    set openId = #{openid,jdbcType=VARCHAR},
      playDate = #{playdate,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      count = #{count,jdbcType=INTEGER},
      isWin = #{iswin,jdbcType=BIT},
      prize = #{prize,jdbcType=VARCHAR},
      points = #{points,jdbcType=INTEGER}
    where Id = #{id,jdbcType=BIGINT}
  </update>
</mapper>