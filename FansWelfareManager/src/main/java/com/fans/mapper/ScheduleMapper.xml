<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fans.mapper.ScheduleMapper">
  <resultMap id="BaseResultMap" type="com.fans.pojo.Schedule">
    <id column="scheId" jdbcType="BIGINT" property="scheid" />
    <result column="scheType" jdbcType="VARCHAR" property="schetype" />
    <result column="scheName" jdbcType="VARCHAR" property="schename" />
    <result column="scheState" jdbcType="VARCHAR" property="schestate" />
    <result column="isValid" jdbcType="INTEGER" property="isvalid" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    scheId, scheType, scheName, scheState, isValid, remark
  </sql>
  <select id="selectByExample" parameterType="com.fans.pojo.ScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from schedule
    where scheId = #{scheid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from schedule
    where scheId = #{scheid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fans.pojo.ScheduleExample">
    delete from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fans.pojo.Schedule">
    insert into schedule (scheId, scheType, scheName, 
      scheState, isValid, remark
      )
    values (#{scheid,jdbcType=BIGINT}, #{schetype,jdbcType=VARCHAR}, #{schename,jdbcType=VARCHAR}, 
      #{schestate,jdbcType=VARCHAR}, #{isvalid,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fans.pojo.Schedule">
    insert into schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scheid != null">
        scheId,
      </if>
      <if test="schetype != null">
        scheType,
      </if>
      <if test="schename != null">
        scheName,
      </if>
      <if test="schestate != null">
        scheState,
      </if>
      <if test="isvalid != null">
        isValid,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scheid != null">
        #{scheid,jdbcType=BIGINT},
      </if>
      <if test="schetype != null">
        #{schetype,jdbcType=VARCHAR},
      </if>
      <if test="schename != null">
        #{schename,jdbcType=VARCHAR},
      </if>
      <if test="schestate != null">
        #{schestate,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null">
        #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fans.pojo.ScheduleExample" resultType="java.lang.Long">
    select count(*) from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update schedule
    <set>
      <if test="record.scheid != null">
        scheId = #{record.scheid,jdbcType=BIGINT},
      </if>
      <if test="record.schetype != null">
        scheType = #{record.schetype,jdbcType=VARCHAR},
      </if>
      <if test="record.schename != null">
        scheName = #{record.schename,jdbcType=VARCHAR},
      </if>
      <if test="record.schestate != null">
        scheState = #{record.schestate,jdbcType=VARCHAR},
      </if>
      <if test="record.isvalid != null">
        isValid = #{record.isvalid,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update schedule
    set scheId = #{record.scheid,jdbcType=BIGINT},
      scheType = #{record.schetype,jdbcType=VARCHAR},
      scheName = #{record.schename,jdbcType=VARCHAR},
      scheState = #{record.schestate,jdbcType=VARCHAR},
      isValid = #{record.isvalid,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fans.pojo.Schedule">
    update schedule
    <set>
      <if test="schetype != null">
        scheType = #{schetype,jdbcType=VARCHAR},
      </if>
      <if test="schename != null">
        scheName = #{schename,jdbcType=VARCHAR},
      </if>
      <if test="schestate != null">
        scheState = #{schestate,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null">
        isValid = #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where scheId = #{scheid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fans.pojo.Schedule">
    update schedule
    set scheType = #{schetype,jdbcType=VARCHAR},
      scheName = #{schename,jdbcType=VARCHAR},
      scheState = #{schestate,jdbcType=VARCHAR},
      isValid = #{isvalid,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where scheId = #{scheid,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.fans.pojo.Schedule">
    <id column="scheId" jdbcType="BIGINT" property="scheid" />
    <result column="scheType" jdbcType="VARCHAR" property="schetype" />
    <result column="scheName" jdbcType="VARCHAR" property="schename" />
    <result column="scheState" jdbcType="VARCHAR" property="schestate" />
    <result column="isValid" jdbcType="INTEGER" property="isvalid" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    scheId, scheType, scheName, scheState, isValid, remark
  </sql>
  <select id="selectByExample" parameterType="com.fans.pojo.ScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from schedule
    where scheId = #{scheid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from schedule
    where scheId = #{scheid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fans.pojo.ScheduleExample">
    delete from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fans.pojo.Schedule">
    insert into schedule (scheId, scheType, scheName, 
      scheState, isValid, remark
      )
    values (#{scheid,jdbcType=BIGINT}, #{schetype,jdbcType=VARCHAR}, #{schename,jdbcType=VARCHAR}, 
      #{schestate,jdbcType=VARCHAR}, #{isvalid,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fans.pojo.Schedule">
    insert into schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scheid != null">
        scheId,
      </if>
      <if test="schetype != null">
        scheType,
      </if>
      <if test="schename != null">
        scheName,
      </if>
      <if test="schestate != null">
        scheState,
      </if>
      <if test="isvalid != null">
        isValid,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scheid != null">
        #{scheid,jdbcType=BIGINT},
      </if>
      <if test="schetype != null">
        #{schetype,jdbcType=VARCHAR},
      </if>
      <if test="schename != null">
        #{schename,jdbcType=VARCHAR},
      </if>
      <if test="schestate != null">
        #{schestate,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null">
        #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fans.pojo.ScheduleExample" resultType="java.lang.Long">
    select count(*) from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update schedule
    <set>
      <if test="record.scheid != null">
        scheId = #{record.scheid,jdbcType=BIGINT},
      </if>
      <if test="record.schetype != null">
        scheType = #{record.schetype,jdbcType=VARCHAR},
      </if>
      <if test="record.schename != null">
        scheName = #{record.schename,jdbcType=VARCHAR},
      </if>
      <if test="record.schestate != null">
        scheState = #{record.schestate,jdbcType=VARCHAR},
      </if>
      <if test="record.isvalid != null">
        isValid = #{record.isvalid,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update schedule
    set scheId = #{record.scheid,jdbcType=BIGINT},
      scheType = #{record.schetype,jdbcType=VARCHAR},
      scheName = #{record.schename,jdbcType=VARCHAR},
      scheState = #{record.schestate,jdbcType=VARCHAR},
      isValid = #{record.isvalid,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fans.pojo.Schedule">
    update schedule
    <set>
      <if test="schetype != null">
        scheType = #{schetype,jdbcType=VARCHAR},
      </if>
      <if test="schename != null">
        scheName = #{schename,jdbcType=VARCHAR},
      </if>
      <if test="schestate != null">
        scheState = #{schestate,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null">
        isValid = #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where scheId = #{scheid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fans.pojo.Schedule">
    update schedule
    set scheType = #{schetype,jdbcType=VARCHAR},
      scheName = #{schename,jdbcType=VARCHAR},
      scheState = #{schestate,jdbcType=VARCHAR},
      isValid = #{isvalid,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where scheId = #{scheid,jdbcType=BIGINT}
  </update>
</mapper>